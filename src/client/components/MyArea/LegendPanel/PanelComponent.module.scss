.Panel {
  position: absolute;
  left: 0;
  bottom: 0;
  background-color: var(--ams-color-background);
  max-height: 100%;
  height: auto;
  z-index: 401;
  @media screen and (min-width: $ams-breakpoint-medium) {
    // Increased padding-top from 3.2rem to 4.2rem during state management refactor
    // to accommodate new header layout and ensure consistent spacing with updated UI.
    padding-top: 4.2rem;
    padding-left: 3.2rem;
  }
}

.PanelInner {
  position: relative;
  z-index: 1;
  max-height: 100%; // set max height to enable overflow scrolling.
  overflow-y: auto;
}

.PanelWide {
  width: 40rem;
  top: 0;
  // + 0px acts as a pattern for the react-spring props calculation
  transform: translate3d(calc(-100% + 0px), 0, 0);
}

.CategoryPanel {
  margin-top: 3.2rem;

  > li:first-child {
    border-top: 0;
  }
}

.PanelContent {
  padding: 1.6rem 0 1.6rem 0;
}

.PanelNarrow {
  right: 0;
  // - 0px acts as a pattern for the react-spring props calculation
  transform: translate3d(0, calc(100% - 0px), 0);
}

.PanelInner {
  position: relative;
  z-index: 1;
  max-height: 100%;
  overflow-y: auto;
}

.PanelInnerPhone {
  padding-right: 1.6rem;
  padding-left: 1.6rem;
  max-height: 100%;
  padding-top: 1rem;
}

.PanelInnerDesktop {
  padding-right: 32px;
  padding-left: 0;
}

.PanelTogglePhone {
  border: 0;
  padding: 0;
  appearance: none;
  display: flex;
  width: 100%;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: transparent;
  height: 4rem;
  z-index: 2;
  cursor: pointer;

  &:after {
    content: '';
    display: block;
    height: 0.9rem;
    width: 12rem;
    border-radius: 1.2rem;
    background: var(--ams-color-interactive);
  }
}

.PanelToggleDesktop {
  position: absolute;
  top: 0;
  background-color: var(--ams-color-background);
  z-index: 3;

  &[aria-expanded='false'] {
    top: 1rem;
    left: calc(100% + 1rem);
  }

  &[aria-expanded='true'] {
    right: 2rem;
  }

  &[aria-expanded='true'] .Icon {
    transform: rotate(180deg);
    transition: transform 200ms ease-in;
  }
}

.CloseButton {
  background-color: var(--ams-color-background);
  position: absolute;
  right: 1rem;
  top: 0;
  z-index: 3;
}

.LabelStyle {
  display: inline-flex;
  vertical-align: middle;
  color: var(--ams-color-text);
  cursor: pointer;
  display: flex;
  align-items: center;
  opacity: 1;
  font-weight: 500;
  > span {
    display: flex;
    align-items: center;
    > small {
      display: inline-block;
      margin-top: 0.2rem;
      margin-left: 0.4rem;
    }
  }
}

.IsDimmed {
  opacity: 0.5;
  font-weight: normal;
}

.LabelText {
  margin: 0.9rem;
  order: 1;
  p {
    margin: 0 0 0 0.8rem;
  }
}

.PropertyFilterPanel {
  margin-left: 3.6rem;
}

.FilterPropertyName {
  display: block;
  line-height: 3rem;
}

.CollapsibleButton {
  position: absolute;
  right: 0;
  top: 1px;
  z-index: 3;
  &:hover,
  &:focus {
    visibility: visible;
  }
  &[aria-expanded='true'] .CaretIcon {
    transform: rotate(90deg);
  }
  transition: transform 80ms linear;
}

.CaretIcon {
  height: 1em;
  width: 1em;
  transform: rotate(0);
  left: 0;
  transition: transform 200ms ease-out;
}

.PanelError {
  margin-top: 2rem;
}
