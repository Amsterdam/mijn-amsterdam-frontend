import { render } from '@testing-library/react';
import Mockdate from 'mockdate';
import { generatePath } from 'react-router-dom';
import { MutableSnapshot } from 'recoil';
import { afterAll, beforeAll, describe, expect, it } from 'vitest';

import { VarenDetail } from './VarenDetail';
import {
  VarenFrontend,
  VarenRegistratieRederType,
  VarenVergunningExploitatieType,
} from '../../../server/services/varen/config-and-types';
import { AppRoutes } from '../../../universal/config/routes';
import { jsonCopy } from '../../../universal/helpers/utils';
import { AppState } from '../../../universal/types/App.types';
import { appStateAtom } from '../../hooks/useAppState';
import MockApp from '../MockApp';

type ExploitatieAanvraag = VarenFrontend<VarenVergunningExploitatieType>;
const VAREN_DEFAULT: ExploitatieAanvraag = {
  id: 'OverwriteThis',
  key: 'HEHEFJSDIAJI4834278O8888B7B11890',
  title: 'Varen vergunning exploitatie',
  statusDates: [],
  termijnDates: [],
  status: 'Besluit',
  caseType: 'Varen vergunning exploitatie',
  decision: 'Verleend',
  identifier: 'Z/24/3421790',
  processed: false,
  dateDecision: '2023-11-07T00:00:00',
  dateRequest: '2023-11-07T00:00:00',
  dateStart: null,
  dateEnd: null,
  linkDataRequest: null,
  vesselName: 'Titanic',
  vesselLength: '2,38',
  vesselWidth: '2,48',
  vesselHeight: '3,00',
  vesselDepth: '6,00',
  numberOfSeats: 150,
  segment: 'Onbemand',
  formAppearance: 2,
  eniNumber: null,
  permitReference: null,
  dateDecisionFormatted: '07 november 2023',
  dateInBehandeling: null,
  dateInBehandelingFormatted: null,
  dateRequestFormatted: '07 november 2023',
  steps: [
    {
      status: 'Ontvangen',
      datePublished: '2023-11-07T00:00:00',
      description: '',
      isActive: false,
      isChecked: true,
      id: 'step-0',
    },
    {
      status: 'In behandeling',
      datePublished: '2023-11-07T00:00:00',
      description: '',
      isActive: false,
      isChecked: true,
      id: 'step-1',
    },
    {
      status: 'Besluit',
      datePublished: '2023-11-07T00:00:00',
      isActive: false,
      isChecked: true,
      id: 'step-2',
    },
  ],
  fetchDocumentsUrl:
    'http://localhost:5000/api/v1/services/decos/documents?id=pejSv3WxQXKnqLC-_zGaefC9CD1ZUK2NZ31kLVoSds3HcjiBX4v-o7cXh5wdOXaWUqrH2DQIFFC_l8EfSe3NPqhNflv9JPNekMelZQs_eAA',
  link: {
    to: '/passagiers-en-beroepsvaart/vergunning/varen-vergunning-exploitatie/Z-24-3421790',
    title: 'Bekijk hoe het met uw aanvraag staat',
  },
};

const createSteps = (statusActive: ExploitatieAanvraag['status']) => {
  return [
    {
      status: 'Ontvangen',
      datePublished: '2023-11-07T00:00:00',
      description: '',
      isActive: statusActive === 'Ontvangen',
      isChecked: true,
      id: 'step-0',
    },
    {
      status: 'In behandeling',
      datePublished: '2023-11-08T00:00:00',
      description: '',
      isActive: statusActive === 'In behandeling',
      isChecked: statusActive !== 'Ontvangen',
      id: 'step-1',
    },
    {
      status: 'Besluit',
      datePublished: '2023-11-09T00:00:00',
      isActive: false,
      isChecked: statusActive === 'Besluit',
      id: 'step-2',
    },
  ];
};
const exploitatieReceived: ExploitatieAanvraag = {
  ...VAREN_DEFAULT,
  id: 'Z-24-0000001',
  identifier: 'Z/24/0000001',
  processed: false,
  status: 'Besluit',
  steps: createSteps('Ontvangen'),
};

const exploitatieInProgress: ExploitatieAanvraag = {
  ...VAREN_DEFAULT,
  id: 'Z-24-0000001',
  identifier: 'Z/24/0000001',
  status: 'Besluit',
  processed: false,
  steps: createSteps('In behandeling'),
};

const exploitatieDecision: ExploitatieAanvraag = {
  ...VAREN_DEFAULT,
  id: 'Z-24-0000001',
  identifier: 'Z/24/0000001',
  status: 'Besluit',
  decision: 'Verleend',
  processed: true,
  steps: createSteps('Besluit'),
};

const rederRegistratie: VarenFrontend<VarenRegistratieRederType> = {
  id: '2801937838',
  title: 'Varen registratie reder',
  caseType: 'Varen registratie reder',
  company: 'Balonnenfabriek',
  bsnkvk: 'KVK',
  address: 'Amstel 1, 1011 PN Amsterdam',
  postalCode: null,
  city: null,
  phone: '0612345678',
  email: 'myemailadres@example.com',
  dateRequestFormatted: '06 november 2023',
} as unknown as VarenFrontend<VarenRegistratieRederType>;

const varenContent: AppState['VAREN']['content'] = [
  exploitatieReceived,
  exploitatieInProgress,
  exploitatieDecision,
  rederRegistratie,
];

const getTestState = (content: VarenFrontend[] = varenContent): AppState =>
  jsonCopy({
    VAREN: {
      content: content,
      status: 'OK',
    },
  });

function initializeState(snapshot: MutableSnapshot, state: AppState) {
  snapshot.set(appStateAtom, state);
}

const routePath = AppRoutes['VAREN/DETAIL'];
const routeEntry = generatePath(AppRoutes['VAREN/DETAIL'], {
  caseType: 'Varen vergunning exploitatie',
  id: 'Z-24-0000001',
});

describe('<VarenDetail />', () => {
  function Component({ state }: { state: AppState }) {
    return (
      <MockApp
        routePath={routePath}
        routeEntry={routeEntry}
        component={VarenDetail}
        initializeState={(snap) => initializeState(snap, state)}
      />
    );
  }

  beforeAll(() => {
    Mockdate.set('2025-03-04');
  });

  afterAll(() => {
    Mockdate.reset();
  });

  describe('Varen vergunning exploitatie not processed', () => {
    it('Shows the correct detail page for Varen vergunning exploitatie', () => {
      const screen = render(
        <Component state={getTestState([exploitatieReceived])} />
      );
      expect(
        screen.getByText('Varen vergunning exploitatie')
      ).toBeInTheDocument();
    });

    it('Does not show action buttons on Varen vergunning exploitatie received', () => {
      const screen = render(
        <Component state={getTestState([exploitatieReceived])} />
      );
      expect(screen.queryByText('Wijzigen')).toBeNull();
    });

    it('Does not show action buttons on Varen vergunning exploitatie in progress', () => {
      const screen = render(
        <Component state={getTestState([exploitatieInProgress])} />
      );
      expect(screen.queryByText('Wijzigen')).toBeNull();
    });
  });

  describe('Varen vergunning exploitatie processed', () => {
    it('Shows the action buttons on Varen vergunning exploitatie processed', () => {
      const screen = render(
        <Component
          state={getTestState([exploitatieDecision, rederRegistratie])}
        />
      );
      expect(screen.getByText('Wijzigen').getAttribute('href')).toContain(
        'formulieren'
      );
    });
  });
});
