import { Grid, GridColumnNumber } from '@amsterdam/design-system-react';

import { CONTENT_EMPTY, isVergunning } from './helper';
import { useVarenZaakDetailPage } from './useVarenDetailPage.hook';
import styles from './Varen.module.scss';
import type { VarenZakenFrontend } from '../../../../server/services/varen/config-and-types';
import { Datalist, RowSet } from '../../../components/Datalist/Datalist';
import ThemaDetailPagina from '../../../components/Thema/ThemaDetailPagina';
import { useHTMLDocumentTitle } from '../../../hooks/useHTMLDocumentTitle';

type VarenDetailPageContentProps = {
  zaak: VarenZakenFrontend;
};

const DEFAULT_GRID_SPAN: GridColumnNumber = 4;
export function PageContent({ zaak }: VarenDetailPageContentProps) {
  let titleWijziging = null;
  switch (zaak.caseType) {
    case 'Varen vergunning exploitatie Wijziging vaartuignaam':
      titleWijziging = `U geeft dit vaartuig de nieuwe naam ${zaak.vesselNameNew ?? CONTENT_EMPTY}`;
      break;
    case 'Varen vergunning exploitatie Wijziging vervanging':
      titleWijziging = `U vervangt ${zaak.vesselName} door ${zaak.vesselNameNew ?? CONTENT_EMPTY}`;
      break;
    case 'Varen vergunning exploitatie Wijziging verbouwing':
      titleWijziging = `U vervangt ${zaak.vesselName ?? CONTENT_EMPTY} door een te (ver)bouwen vaartuig`;
      break;
    case 'Varen vergunning exploitatie Wijziging vergunninghouder':
      titleWijziging = `U draagt de vergunning over aan ${zaak.statutoryName ?? CONTENT_EMPTY}`;
  }

  const rows: RowSet[] = [];
  if (titleWijziging) {
    rows.push({
      rows: [
        {
          label: 'Wijziging',
          content: titleWijziging,
          span: 8,
        },
      ],
    });
  }
  rows.push(
    ...[
      {
        rows: [
          {
            label: 'Naam vaartuig',
            content: zaak.vesselName || CONTENT_EMPTY,
            span: DEFAULT_GRID_SPAN,
          },
          {
            label: 'Segment',
            content: zaak.segment || CONTENT_EMPTY,
            span: DEFAULT_GRID_SPAN,
          },
        ],
      },
      {
        rows: [
          {
            label: 'Lengte vaartuig',
            content: zaak.vesselLength
              ? `${zaak.vesselLength} meter`
              : CONTENT_EMPTY,
            span: DEFAULT_GRID_SPAN,
          },
          {
            label: 'Breedte vaartuig',
            content: zaak?.vesselWidth
              ? `${zaak.vesselWidth} meter`
              : CONTENT_EMPTY,
            span: DEFAULT_GRID_SPAN,
          },
        ],
      },
      {
        rows: [
          zaak.caseType === 'Varen vergunning exploitatie'
            ? {
                label: 'Zaakkenmerk',
                content: zaak.identifier || CONTENT_EMPTY,
                span: DEFAULT_GRID_SPAN,
              }
            : {
                label: 'Vergunningkenmerk',
                content: zaak.vergunning?.identifier || CONTENT_EMPTY,
                span: DEFAULT_GRID_SPAN,
              },
          {
            label: 'ENI-nummer',
            content: zaak.eniNumber || CONTENT_EMPTY,
            span: DEFAULT_GRID_SPAN,
          },
        ],
      },
    ]
  );

  if (zaak.processed && zaak.decision) {
    rows.push({
      rows: [
        {
          label: 'Resultaat',
          content: zaak.displayStatus || CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
      ],
    });
  }
  return (
    <Grid.Cell span="all">
      <Datalist rows={rows} className={styles.VarenGridWithoutRowGap} />
    </Grid.Cell>
  );
}

export function VarenDetailPageContentExploitatieZaak() {
  const { zaak, themaId, isLoading, isError, breadcrumbs, routeConfig } =
    useVarenZaakDetailPage();
  useHTMLDocumentTitle(routeConfig.detailPageZaak);

  let pageContent = null;
  if (zaak) {
    pageContent = <PageContent zaak={zaak} />;
  }
  return (
    <ThemaDetailPagina
      themaId={themaId}
      statusLabel="Status van uw aanvraag"
      title={zaak?.title ?? 'Varen vergunning'}
      zaak={zaak}
      isError={isError || !pageContent}
      isLoading={isLoading}
      pageContentMain={pageContent}
      breadcrumbs={breadcrumbs}
      showStatusSteps={!isVergunning(zaak)}
    />
  );
}
