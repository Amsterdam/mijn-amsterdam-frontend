import {
  Alert,
  Grid,
  GridColumnNumber,
  Heading,
  Link,
  Paragraph,
} from '@amsterdam/design-system-react';

import { CONTENT_EMPTY, isVergunning } from './helper';
import { useVarenZaakDetailPage } from './useVarenDetailPage.hook';
import styles from './Varen.module.scss';
import type { VarenZakenFrontend } from '../../../../server/services/varen/config-and-types';
import { Datalist, RowSet } from '../../../components/Datalist/Datalist';
import ThemaDetailPagina from '../../../components/Thema/ThemaDetailPagina';
import { useHTMLDocumentTitle } from '../../../hooks/useHTMLDocumentTitle';

type VarenDetailPageContentProps = {
  zaak: VarenZakenFrontend;
};

const emailContactVaren = 'vergunningenophetwater@amsterdam.nl';
export function VarenDisclaimerNoLinkedVergunning(zaak: VarenZakenFrontend) {
  return (
    <Grid.Cell span="all">
      <Alert
        severity="warning"
        headingLevel={4}
        heading="De vergunning is nog niet gevonden"
      >
        <Paragraph>
          We kunnen de zaak nu nog niet koppelen aan de vergunning. Dit kan
          misschien 1 dag duren. Duurt het langer? Stuur ons dan een e-mail naar{' '}
          <Link
            rel="noreferrer"
            href={`mailto:${emailContactVaren}?subject=Vergunning niet gevonden voor zaakkenmerk ${zaak.identifier}`}
          >
            {emailContactVaren}
          </Link>
          .
        </Paragraph>
        <Paragraph>
          {`Zet in de e-mail het zaakkenmerk: ${zaak.identifier}.`}
        </Paragraph>
      </Alert>
    </Grid.Cell>
  );
}

const DEFAULT_GRID_SPAN: GridColumnNumber = 4;
export function PageContent({ zaak }: VarenDetailPageContentProps) {
  let titleWijziging = null;
  switch (zaak.caseType) {
    case 'Varen vergunning exploitatie Wijziging vaartuignaam':
      titleWijziging = `U wilt de naam van "${zaak.vesselName ?? CONTENT_EMPTY}" wijzigen naar "${zaak.vesselNameNew ?? CONTENT_EMPTY}".`;
      break;
    case 'Varen vergunning exploitatie Wijziging vervanging':
      titleWijziging = `U wilt "${zaak.vesselName ?? CONTENT_EMPTY}" vervangen door "${zaak.vesselNameNew ?? CONTENT_EMPTY}".`;
      break;
    case 'Varen vergunning exploitatie Wijziging verbouwing':
      titleWijziging = `U wilt "${zaak.vesselName ?? CONTENT_EMPTY}" verbouwen.`;
      break;
    case 'Varen vergunning exploitatie Wijziging vergunninghouder':
      titleWijziging = `U wilt de vergunning overdragen aan "${zaak.statutoryName ?? CONTENT_EMPTY}".`;
  }

  const rows: RowSet[] = [];
  if (titleWijziging) {
    rows.push({
      rows: [
        {
          label: 'Wijziging',
          content: titleWijziging,
          span: 8,
        },
      ],
    });
  }
  rows.push({
    rows: [
      {
        label: 'Zaakkenmerk',
        content: zaak.identifier || CONTENT_EMPTY,
        span: DEFAULT_GRID_SPAN,
      },
      zaak.processed && zaak.decision
        ? {
            label: 'Resultaat',
            content: zaak.displayStatus || CONTENT_EMPTY,
            span: DEFAULT_GRID_SPAN,
          }
        : null,
    ].filter((z) => !!z),
  });

  const vergunningRows = [
    {
      rows: [
        {
          label: 'Naam vaartuig',
          content: zaak.vergunning?.vesselName || CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
        {
          label: 'Segment',
          content: zaak.vergunning?.segment || CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
      ],
    },
    {
      rows: [
        {
          label: 'Lengte vaartuig',
          content: zaak.vergunning?.vesselLength
            ? `${zaak.vergunning?.vesselLength} meter`
            : CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
        {
          label: 'Breedte vaartuig',
          content: zaak?.vergunning?.vesselWidth
            ? `${zaak.vergunning?.vesselWidth} meter`
            : CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
      ],
    },
    {
      rows: [
        {
          label: 'Vergunningkenmerk',
          content: zaak.vergunning?.vergunningKenmerk || CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
        {
          label: 'ENI-nummer',
          content: zaak.vergunning?.eniNumber || CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
      ],
    },
  ];
  return (
    <Grid.Cell span="all">
      <Datalist rows={rows} className={styles.VarenGridWithoutRowGap} />
      <Heading level={4} size="level-3">
        Gegevens vergunning
      </Heading>
      <Datalist
        rows={vergunningRows}
        className={styles.VarenGridWithoutRowGap}
      />
      {!!zaak.vergunning?.identifier || VarenDisclaimerNoLinkedVergunning(zaak)}
    </Grid.Cell>
  );
}

export function VarenDetailPageContentExploitatieZaak() {
  const { zaak, themaId, isLoading, isError, breadcrumbs, routeConfig } =
    useVarenZaakDetailPage();
  useHTMLDocumentTitle(routeConfig.detailPageZaak);

  let pageContent = null;
  if (zaak) {
    pageContent = <PageContent zaak={zaak} />;
  }
  return (
    <ThemaDetailPagina
      themaId={themaId}
      statusLabel="Status van uw aanvraag"
      title={zaak?.title ?? 'Varen vergunning'}
      zaak={zaak}
      isError={isError || !pageContent}
      isLoading={isLoading}
      pageContentMain={pageContent}
      breadcrumbs={breadcrumbs}
      showStatusSteps={!isVergunning(zaak)}
    />
  );
}
