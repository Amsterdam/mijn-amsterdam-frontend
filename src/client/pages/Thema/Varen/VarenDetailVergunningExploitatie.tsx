import {
  ActionGroup,
  Alert,
  Grid,
  GridColumnNumber,
  Icon,
  Paragraph,
} from '@amsterdam/design-system-react';
import { ExternalLinkIcon } from '@amsterdam/design-system-react-icons';

import { CONTENT_EMPTY } from './helper';
import { useVarenVergunningDetailPage } from './useVarenDetailPage.hook';
import styles from './Varen.module.scss';
import { VarenDisclaimerRederNotRegistered } from './VarenThema';
import type { VarenVergunningFrontend } from '../../../../server/services/varen/config-and-types';
import { ButtonLinkProps } from '../../../../universal/types/App.types';
import { Datalist, RowSet } from '../../../components/Datalist/Datalist';
import { MaButtonLink, MaRouterLink } from '../../../components/MaLink/MaLink';
import ThemaDetailPagina from '../../../components/Thema/ThemaDetailPagina';
import { useHTMLDocumentTitle } from '../../../hooks/useHTMLDocumentTitle';

type VarenDetailPageContentProps = {
  vergunning: VarenVergunningFrontend;
  hasRegistratieReder: boolean;
  buttonItems: ButtonLinkProps[];
};

const DEFAULT_GRID_SPAN: GridColumnNumber = 4;
function PageContent({
  vergunning,
}: Pick<VarenDetailPageContentProps, 'vergunning'>) {
  const rows: RowSet[] = [
    {
      rows: [
        {
          label: 'Naam vaartuig',
          content: vergunning?.vesselName || CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
        {
          label: 'Segment',
          content: vergunning.segment || CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
      ],
    },
    {
      rows: [
        {
          label: 'Lengte vaartuig',
          content: vergunning.vesselLength
            ? `${vergunning.vesselLength} meter`
            : CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
        {
          label: 'Breedte vaartuig',
          content: vergunning.vesselWidth
            ? `${vergunning.vesselWidth} meter`
            : CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
      ],
    },
    {
      rows: [
        {
          label: 'Vergunningkenmerk',
          content: vergunning.identifier || CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
        {
          label: 'ENI-nummer',
          content: vergunning.eniNumber || CONTENT_EMPTY,
          span: DEFAULT_GRID_SPAN,
        },
      ],
    },
  ];
  return (
    <Grid.Cell span="all">
      <Datalist rows={rows} className={styles.VarenGridWithoutRowGap} />
    </Grid.Cell>
  );
}

export function VarenDetailPageContentExploitatieVergunning() {
  const {
    vergunning,
    hasRegistratieReder,
    buttonItems,
    themaId,
    isLoading,
    isError,
    breadcrumbs,
    routeConfig,
  } = useVarenVergunningDetailPage();
  useHTMLDocumentTitle(routeConfig.detailPageVergunning);

  let pageContent = null;
  if (vergunning) {
    const showRederAlert = !hasRegistratieReder;
    const showWijzigingInProgressAlert = vergunning.linkedActiveZaakLink;
    const showButtons =
      !showRederAlert &&
      !showWijzigingInProgressAlert &&
      buttonItems?.length > 0;

    pageContent = (
      <>
        <PageContent vergunning={vergunning} />
        {showButtons && (
          <Grid.Cell span="all">
            <ActionGroup>
              {buttonItems.map(({ to, title, isDisabled }) => (
                <MaButtonLink
                  key={to}
                  href={to}
                  isDisabled={isDisabled}
                  variant="secondary"
                >
                  {title}
                  <Icon svg={ExternalLinkIcon} size="heading-5" />
                </MaButtonLink>
              ))}
            </ActionGroup>
          </Grid.Cell>
        )}
        {showRederAlert && VarenDisclaimerRederNotRegistered}
        {showWijzigingInProgressAlert && (
          <Grid.Cell span="all">
            <Alert heading="Wijziging in behandeling" headingLevel={4}>
              <Paragraph>
                U kunt geen wijziging indienen omdat u al een wijzigingsaanvraag
                heeft lopen. Als uw wijzigingsaanvraag is afgrond kunt u hier
                een nieuwe wijziging aanvragen.
              </Paragraph>
              <Paragraph>
                {vergunning.linkedActiveZaakLink?.to && (
                  <MaRouterLink href={vergunning.linkedActiveZaakLink?.to}>
                    Bekijk ingediende wijziging
                  </MaRouterLink>
                )}
              </Paragraph>
            </Alert>
          </Grid.Cell>
        )}
      </>
    );
  }
  return (
    <ThemaDetailPagina
      themaId={themaId}
      statusLabel="Status van uw aanvraag"
      title={vergunning?.title ?? 'Varen vergunning'}
      zaak={vergunning}
      isError={isError || !pageContent}
      isLoading={isLoading}
      pageContentMain={pageContent}
      breadcrumbs={breadcrumbs}
      showStatusSteps={false}
    />
  );
}
