openapi: 3.0.3
info:
  version: '1.0'
  title: Mijn Amsterdam api spec for external consumers (Amsterdam App)
  description: |
    We're providing a set of endpoints that can be used to retrieve data from source api's. These api's are intended for users other than Mijn Amsterdam
    Note: the paths that start with /private are only accessible in development mode (localhost) or via our private-network resources.
  contact:
    name: Mijn Amsterdam
    url: https://mijn.amsterdam.nl/
    email: mijnAmsterdam@amsterdam.nl
servers:
  - url: https://mijn.amsterdam.nl
  - url: https://az-acc.mijn.amsterdam.nl
  - url: https://test.mijn.amsterdam.nl
  - url: http://localhost:5000

paths:
  /api/v1/services/amsapp/stadspas/login/{sessionToken}:
    get:
      description: Redirects to Digid login, initiates as OIDC session on callback.
      parameters:
        - name: sessionToken
          in: path
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Found. Valid redirect to Digid login
        '404':
          description: Not Found. (Missing path parameter)
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
  /api/v1/services/amsapp/stadspas/administratienummer/{sessionToken}:
    get:
      description: Retrieves administratienummer based on BSN found in OIDC session.
      parameters:
        - name: sessionToken
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            Always returns html page with link that opens Stadspas App automatically with Javascript.
            If the administratienummer is retrieved succesfully, no query parameters are passed to the app link.
            If an error occurred an ApiErrorAdministratieNummer will be passed as query parameters to the app link.
          content:
            'text/html':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ApiErrorAdministratieNummer'
                  - type: string
        '404':
          description: Missing path parameter
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
  /private/api/v1/services/amsapp/stadspas/passen/{administratienummerEncrypted}:
    get:
      security:
        - ApiKeyAuth: []
      description: |
        Retrieves stadspas data related to the provided administratienummer \
        Note: If administratienummer doesn't have any active passes, an empty array is returned.
      parameters:
        - name: administratienummerEncrypted
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns stadspas data
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StadspassenResponse'
        '400':
          description: Returns bad request error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'

        '401':
          description: Returns unauthorized error (invalid api key)
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '500':
          description: |
            Returns Application error, any error in code or from failed requests.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /private/api/v1/services/amsapp/stadspas/aanbiedingen/transactions/{transactionsKeyEncrypted}:
    get:
      security:
        - ApiKeyAuth: []
      description: |
        Retrieves transaction data data related to the provided transactionKey. \
        Note: If no transactions are made, an empty array is returned.
      parameters:
        - name: transactionsKeyEncrypted
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns transactions data
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StadsDiscountTransactionsResponse'
        '400':
          description: Returns bad request error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'

        '401':
          description: Returns unauthorized error (invalid api key)
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '500':
          description: |
            Returns Application error, any error in code or from failed requests.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApplicationError'

  /private/api/v1/services/amsapp/stadspas/budget/transactions/{transactionsKeyEncrypted}:
    get:
      security:
        - ApiKeyAuth: []
      description: |
        Retrieves transaction data data related to the provided transactionKey. \
        Note: If no transactions are made, an empty array is returned.
      parameters:
        - name: transactionsKeyEncrypted
          in: path
          required: true
          schema:
            type: string
        - name: budgetCode
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns transactions data
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StadsTransactionsResponse'
        '400':
          description: Returns bad request error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'

        '401':
          description: Returns unauthorized error (invalid api key)
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '500':
          description: |
            Returns Application error, any error in code or from failed requests.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApplicationError'
  /private/api/v1/services/amsapp/stadspas/block/{transactionsKeyEncrypted}:
    post:
      security:
        - ApiKeyAuth: []
      description: |
        Blocks a stadspas with the passNumber supplied in transactionsKeyEncrypted.
      parameters:
        - name: transactionsKeyEncrypted
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Blocking stadspas was successful
        '400':
          description: Returns bad request error
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        '401':
          description: Returns unauthorized error (invalid api key)
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '500':
          description: |
            Returns Application error, any error in code or from failed requests.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApplicationError'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    StadsTransactionsResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/StadspasTransaction'
        status:
          type: string
          enum:
            - 'SUCCESS'

    StadspasTransaction:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        amount:
          type: number
        amountFormatted:
          type: string
          description: 'For example: - €12,45'
        datePublished:
          type: string
        datePublishedFormatted:
          type: string
        budget:
          type: string
          description: Name of the budget
        budgetCode:
          type: string
          description: Same as 'StadspasBudget.code'

    StadsDiscountTransactionsResponse:
      type: object
      properties:
        content:
          type: object
          properties:
            discountAmountTotal:
              type: number
            discountAmountTotalFormatted:
              description: 'For example: "€12,45"'
              type: string
            transactions:
              type: array
              items:
                $ref: '#/components/schemas/StadspasDiscountTransaction'
        status:
          type: string
          enum:
            - 'SUCCESS'

    StadspasDiscountTransaction:
      type: object
      properties:
        id:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        discountTitle:
          type: string
          nullable: true
        discountAmount:
          type: number
        discountAmountFormatted:
          type: string
          description: 'For example: "€12,45"'
        datePublished:
          type: string
        datePublishedFormatted:
          type: string

    StadspasBudget:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        code:
          type: string
        budgetAssigned:
          type: number
        budgetAssignedFormatted:
          type: string
        budgetBalance:
          type: number
        budgetBalanceFormatted:
          type: string
        dateEnd:
          type: string
        dateEndFormatted:
          type: string

    StadspasOwner:
      type: object
      properties:
        initials:
          type: string
        firstname:
          type: string
        infix:
          type: string
        lastname:
          type: string

    Stadspas:
      type: object
      properties:
        id:
          type: string
        owner:
          $ref: '#/components/schemas/StadspasOwner'
        dateEnd:
          type: string
        dateEndFormatted:
          type: string
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/StadspasBudget'
        balanceFormatted:
          type: string
        balance:
          type: number
        passNumber:
          type: number
        passNumberComplete:
          type: string
        securityCode:
          nullable: true
          type: string
        transactionsKeyEncrypted:
          description: |
            Used in subsequent requests to other endpoints requiring this.
            This contains the passNumber and administrationNumber in an encrypted format.
          type: string

    StadspassenResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Stadspas'
        status:
          type: string
          enum:
            - 'SUCCESS'

    ApplicationError:
      type: object
      description: |
        Error if a part of the application returns an error, mostly dependency errors to remote systems.
      properties:
        content:
          nullable: true
        code:
          type: number
          enum:
            - 500
        status:
          type: string
          enum:
            - 'ERROR'
        message:
          type: string

    ApiErrorAdministratieNummer:
      type: object
      description: |
        * 001: Niet ingelogd met Digid
        * 002: Kon het administratienummer niet ophalen
        * 003: Geen administratienummer gevonden
        * 004: Verzenden van administratienummer naar de Amsterdam app niet gelukt
        * 000: Onbekende error
      properties:
        message:
          type: string
        code:
          type: string
          enum:
            - '000'
            - '001'
            - '002'
            - '003'
            - '004'
            - '005'
    ErrorNotFound:
      type: object
      properties:
        content:
          nullable: true
        code:
          type: number
          enum:
            - 404
        status:
          type: string
          enum:
            - 'ERROR'
        message:
          type: string
          enum:
            - 'Not Found'
    ErrorUnauthorized:
      type: object
      properties:
        content:
          nullable: true
        code:
          type: number
          enum:
            - 401
        status:
          type: string
          enum:
            - 'ERROR'
        message:
          type: string
          enum:
            - 'Api key ongeldig'
    ErrorBadRequest:
      type: object
      properties:
        content:
          nullable: true
        code:
          type: number
          enum:
            - 400
        status:
          type: string
          enum:
            - 'ERROR'
        message:
          type: string
          enum:
            - "Bad request: ApiError 005 - Could not decrypt url parameter administratienummerEncrypted'"
            - 'Bad request: ApiError 000 - Onbekende fout'
            - 'Bad request: Bad request: Failed to decrypt transactions key'
