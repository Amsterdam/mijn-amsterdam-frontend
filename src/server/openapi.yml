openapi: 3.0.3
info:
  title: Mijn Amsterdam BFF api definition
  description: The BFF api is used to do data fetching, data transformations, short-lived request/response caching, error handling and response formatting.
  contact:
    name: Datapunt Support
    url: https://mijn.amsterdam.nl/
    email: datapunt@amsterdam.nl
paths:
  /status/health:
    get:
      description: Endpoint for checking whether the server has started.
      responses:
        '200':
          description: Returns "OK" when server is started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthyResponse'
  /services/search-config:
    get:
      description: Provides information relevant to searching the site.
      responses:
        '200':
          description: Returns an object with config data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConfigResponse'
  /services/stream:
    get:
      description: Streams data from the different services to the client using an event stream.
      responses:
        '200':
          description: Returns an event stream with messages from the different services.
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/StreamResponse'
  /services/all:
    get:
      description: An endpoint used to retrieve information from all services. Used when client doesn't support or is able to connect to the EventSource.
      responses:
        '200':
          description: Returns an object with all relevant data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesAllResponse'
  /services/tips:
    parameters:
      - name: optin
        in: query
        required: false
        description: optin?
        schema:
          type: boolean
      - name: profileType
        in: query
        required: false
        description: Users profile type
        schema:
          type: string
          enum: ['private', 'private-commercial', 'commercial']
    get:
      description: This endpoint returns relevant hints for the current user.
      responses:
        '200':
          description: Returns a list of Tip objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipsResponse'
  /services/tips/requestdataoverview:
    get:
      description: Endpoint to view the data send to the tips api (not used).
      responses:
        '200':
          description: Does things?
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipsRequestResponse'
  /map/datasets/{datasetId}/{id}:
    parameters:
      - name: datasetId
        in: path
        required: true
        description: The dataset id
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: Some id
        schema:
          type: string
    get:
      description: Endpoint used to retrieve points of interest for the users area
      responses:
        '200':
          description: Returns a list of Features
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapDatasetResponse'
  /status/cache:
    get:
      description: This endpoint gives an overview of the content inside the cache directory of the server.
      responses:
        '200':
          description: Returns an object with cache overview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheResponse'
  /public/services/cms:
    get:
      description: Endpoint used to retrieve data from the CMS.
      responses:
        '200':
          description: Returns an object with CMS data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CmsResponse'
  /public/services/cms/maintenance-notifications:
    get:
      description: Endpoint used to retrieve maintenance notifications.
      responses:
        '200':
          description: Returns a list of CmsMaintenanceNotification objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CmsMaintenanceResponse'
  /direct/{apiName}:
    parameters:
      - name: apiName
        in: path
        required: true
        description: The name of the api to request data from
        schema:
          type: string
    get:
      description: Retrieves data from the given api
      responses:
        '200':
          description: Result is the direct response from the requested api
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiConfigResponse'
components:
  schemas:
    HealthyResponse:
      type: object
      properties:
        status:
          type: string
          enum:
            - OK
        content:
          type: string
          enum:
            - OK
    SearchConfigResponse:
      type: object
      properties:
        staticSearchEntries:
          type: array
          items:
            $ref: '#/components/schemas/SearchEntry'
        apiSearchConfigs:
          $ref: '#/components/schemas/ApiSearchConfig'
    SearchEntry:
      type: object
      properties:
        url:
          type: string
        displayTitle:
          type: string
        description:
          type: string
        keywords:
          type: array
          items:
            type: string
        profileTypes:
          type: array
          items:
            type: string
            enum:
              - commercial
              - private-commercial
              - private
        isEnabled:
          type: boolean
    ApiSearchConfig:
      type: object
      properties:
        BRP:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        AKTES:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        CMS_CONTENT:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        CMS_MAINTENANCE_NOTIFICATIONS:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        KVK:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        KREFIA:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        WPI_AANVRAGEN:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        WPI_SPECIFICATIES:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        WPI_TOZO:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        WPI_TONK:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        WPI_BBZ:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        WPI_STADSPAS:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        WMO:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        VERGUNNINGEN:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        MY_LOCATION:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        AFVAL:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        AFVALPUNTEN:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        BELASTINGEN:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        MILIEUZONE:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        TOERISTISCHE_VERHUUR:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        ERFPACHT:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        SUBSIDIE:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        NOTIFICATIONS:
          $ref: '#/components/schemas/ApiSearchConfigResult'
        CASES:
          $ref: '#/components/schemas/ApiSearchConfigResult'
    ApiSearchConfigResult:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
        keywordsGeneratedFromProps:
          type: array
          items:
            type: string
        description:
          type: string
    ServicesAllResponse:
      type: object
      properties:
        AFVAL:
          type: object
        AFVALPUNTEN:
          type: object
        BRP:
          type: object
        BELASTINGEN:
          type: object
        CMS_CONTENT:
          type: object
        CMS_MAINTENANCE_NOTIFICATIONS:
          type: object
        ERFPACHT:
          type: object
        KREFIA:
          type: object
        WPI_AANVRAGEN:
          type: object
        WPI_SPECIFICATIES:
          type: object
        WPI_TOZO:
          type: object
        WPI_TONK:
          type: object
        WPI_BBZ:
          type: object
        WPI_STADSPAS:
          type: object
        NOTIFICATIONS:
          type: object
        CASES:
          type: object
        MY_LOCATION:
          type: object
        KVK:
          type: object
        MILIEUZONE:
          type: object
        TOERISTISCHE_VERHUUR:
          type: object
        SUBSIDIE:
          type: object
        VERGUNNINGEN:
          type: object
        WMO:
          type: object
    StreamResponse:
      type: array
      format: event-stream
      items:
        oneOf:
          - type: object
            properties:
              id:
                type: string
              data:
                $ref: '#/components/schemas/StreamItem'
          - type: object
            properties:
              id:
                type: string
              data:
                type: string
                enum:
                  - close
    TipsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Tip'

    TipsRequestResponse:
      type: object
      properties:
        optin:
          type: boolean
        userData:
          type: object
        tips:
          type: array
          items:
            $ref: '#/components/schemas/Tip'
    Tip:
      type: object
      properties:
        id:
          type: string
        datePublished:
          type: string
        title:
          type: string
        description:
          type: string
        link:
          type: object
          properties:
            to:
              type: string
            title:
              type: string
            target:
              type: string
            rel:
              type: string
            download:
              type: string
        imgUrl:
          type: string
        isPersonalized:
          type: boolean
        priority:
          type: number
        reason:
          type: array
          items: {}
        audience:
          type: array
          items: {}
    MapDatasetResponse:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/MapDataset'
        status:
          type: string
          enum:
            - 'OK'
            - 'ERROR'
        id:
          type: string
        failedDependencies:
          $ref: '#/components/schemas/FailedDependencies'
    MapDataset:
      type: object
      properties:
        clusters:
          type: array
          items:
            type: string
        polylines:
          type: array
          items:
            type: string
        errors:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              message:
                type: string
        filters:
          type: object
    CacheResponse:
      type: object
      properties:
        name:
          type: string
        env:
          type: string
        keys:
          type: array
          items:
            type: string
    CmsResponse:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/CmsData'
        status:
          type: string
          enum:
            - 'OK'
            - 'ERROR'
        id:
          type: string
        failedDependencies:
          $ref: '#/components/schemas/FailedDependencies'
    CmsData:
      type: object
      properties:
        generalInfo:
          type: object
          properties:
            title:
              type: string
            content:
              type: string
        footer:
          type: object
          properties:
            blocks:
              type: array
              items: {}
            sub:
              type: array
              items: {}
    CmsMaintenanceResponse:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/CmsMaintenanceList'
        status:
          type: string
          enum:
            - 'OK'
            - 'ERROR'
        id:
          type: string
        failedDependencies:
          $ref: '#/components/schemas/FailedDependencies'
    CmsMaintenanceList:
      type: array
      items:
        $ref: '#/components/schemas/CmsMaitenance'
    CmsMaitenance:
      type: object
      properties:
        title:
          type: string
        datePublished:
          type: string
        dateStart:
          type: string
        dateEnd:
          type: string
        timeEnd:
          type: string
        timeStart:
          type: string
        description:
          type: string
        moreInformation:
          type: string
        path:
          type: string
        link:
          type: string
    ApiConfigResponse:
      type: object
      properties:
        content:
          type: object
    FailedDependencies:
      type: array
      items:
        type: object
        properties:
          status:
            type: string
            enum:
              - 'ERROR'
          message:
            type: string
          id:
            type: string
          sentry:
            type: string
          content:
            type: object
    StreamItem:
      type: object
      properties:
        content:
          type: object
        status:
          type: string
          enum:
            - 'OK'
            - 'ERROR'
